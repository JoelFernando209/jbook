{"ast":null,"code":"import axios from \"axios\";\nexport const unpkgPathPlugin = () => {\n  return {\n    name: \"unpkg-path-plugin\",\n\n    setup(build) {\n      build.onResolve({\n        filter: /.*/\n      }, async args => {\n        console.log(\"onResolve\", args);\n        const {\n          importer,\n          path,\n          resolveDir\n        } = args;\n\n        if (importer !== \"\") {\n          if (importer === \"index.js\") {\n            return {\n              path: `https://unpkg.com/${path}`,\n              namespace: \"a\"\n            };\n          } else {\n            const {\n              href\n            } = new URL(path, `https://unpkg.com${resolveDir}/`);\n            return {\n              path: href,\n              namespace: \"a\"\n            };\n          }\n        }\n\n        return {\n          path: path,\n          namespace: \"a\"\n        };\n      });\n      build.onLoad({\n        filter: /.*/\n      }, async args => {\n        console.log(\"onLoad\", args);\n\n        if (args.path === \"index.js\") {\n          return {\n            loader: \"jsx\",\n            contents: `\n              import message from 'react';\n              console.log(message);\n            `\n          };\n        }\n\n        const {\n          data,\n          request\n        } = await axios.get(args.path);\n        return {\n          loader: \"jsx\",\n          contents: data,\n          resolveDir: new URL(\"./\", request.responseURL).pathname\n        };\n      });\n    }\n\n  };\n};","map":{"version":3,"sources":["/home/joeldt/jbook/src/plugins/unpkg-path-plugin.ts"],"names":["axios","unpkgPathPlugin","name","setup","build","onResolve","filter","args","console","log","importer","path","resolveDir","namespace","href","URL","onLoad","loader","contents","data","request","get","responseURL","pathname"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAE,mBADD;;AAELC,IAAAA,KAAK,CAACC,KAAD,EAA6B;AAChCA,MAAAA,KAAK,CAACC,SAAN,CAAgB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAhB,EAAkC,MAAOC,IAAP,IAAqB;AACrDC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAzB;AAEA,cAAM;AAAEG,UAAAA,QAAF;AAAYC,UAAAA,IAAZ;AAAkBC,UAAAA;AAAlB,YAAiCL,IAAvC;;AAEA,YAAIG,QAAQ,KAAK,EAAjB,EAAqB;AACnB,cAAIA,QAAQ,KAAK,UAAjB,EAA6B;AAC3B,mBAAO;AAAEC,cAAAA,IAAI,EAAG,qBAAoBA,IAAK,EAAlC;AAAqCE,cAAAA,SAAS,EAAE;AAAhD,aAAP;AACD,WAFD,MAEO;AACL,kBAAM;AAAEC,cAAAA;AAAF,gBAAW,IAAIC,GAAJ,CAAQJ,IAAR,EAAe,oBAAmBC,UAAW,GAA7C,CAAjB;AAEA,mBAAO;AAAED,cAAAA,IAAI,EAAEG,IAAR;AAAcD,cAAAA,SAAS,EAAE;AAAzB,aAAP;AACD;AACF;;AAED,eAAO;AAAEF,UAAAA,IAAI,EAAEA,IAAR;AAAcE,UAAAA,SAAS,EAAE;AAAzB,SAAP;AACD,OAhBD;AAkBAT,MAAAA,KAAK,CAACY,MAAN,CAAa;AAAEV,QAAAA,MAAM,EAAE;AAAV,OAAb,EAA+B,MAAOC,IAAP,IAAqB;AAClDC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB;;AAEA,YAAIA,IAAI,CAACI,IAAL,KAAc,UAAlB,EAA8B;AAC5B,iBAAO;AACLM,YAAAA,MAAM,EAAE,KADH;AAELC,YAAAA,QAAQ,EAAG;AACvB;AACA;AACA;AALiB,WAAP;AAOD;;AAED,cAAM;AAAEC,UAAAA,IAAF;AAAQC,UAAAA;AAAR,YAAoB,MAAMpB,KAAK,CAACqB,GAAN,CAAUd,IAAI,CAACI,IAAf,CAAhC;AAEA,eAAO;AACLM,UAAAA,MAAM,EAAE,KADH;AAELC,UAAAA,QAAQ,EAAEC,IAFL;AAGLP,UAAAA,UAAU,EAAE,IAAIG,GAAJ,CAAQ,IAAR,EAAcK,OAAO,CAACE,WAAtB,EAAmCC;AAH1C,SAAP;AAKD,OApBD;AAqBD;;AA1CI,GAAP;AA4CD,CA7CM","sourcesContent":["import * as esbuild from \"esbuild-wasm\";\nimport axios from \"axios\";\n\nexport const unpkgPathPlugin = () => {\n  return {\n    name: \"unpkg-path-plugin\",\n    setup(build: esbuild.PluginBuild) {\n      build.onResolve({ filter: /.*/ }, async (args: any) => {\n        console.log(\"onResolve\", args);\n\n        const { importer, path, resolveDir } = args;\n\n        if (importer !== \"\") {\n          if (importer === \"index.js\") {\n            return { path: `https://unpkg.com/${path}`, namespace: \"a\" };\n          } else {\n            const { href } = new URL(path, `https://unpkg.com${resolveDir}/`);\n\n            return { path: href, namespace: \"a\" };\n          }\n        }\n\n        return { path: path, namespace: \"a\" };\n      });\n\n      build.onLoad({ filter: /.*/ }, async (args: any) => {\n        console.log(\"onLoad\", args);\n\n        if (args.path === \"index.js\") {\n          return {\n            loader: \"jsx\",\n            contents: `\n              import message from 'react';\n              console.log(message);\n            `,\n          };\n        }\n\n        const { data, request } = await axios.get(args.path);\n\n        return {\n          loader: \"jsx\",\n          contents: data,\n          resolveDir: new URL(\"./\", request.responseURL).pathname,\n        };\n      });\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}