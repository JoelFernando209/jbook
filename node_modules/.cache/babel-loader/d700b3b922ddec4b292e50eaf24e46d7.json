{"ast":null,"code":"import axios from \"axios\";\nimport localForage from \"localforage\";\nconst fileCache = localForage.createInstance({\n  name: \"filecache\"\n});\n\nconst getCachedPath = path => fileCache.getItem(path);\n\nconst convertCSSToJSS = css => `\n  const style = document.createElement('style')\n  style.innerText = '${css}'\n  document.head.appendChild(style)\n`;\n\nconst setESBuildConfigObj = (contents, responseURL) => ({\n  loader: \"jsx\",\n  contents,\n  resolveDir: new URL(\"./\", responseURL).pathname\n});\n\nconst escapeCSS = css => css.replace(/\\n/g, \"\").replace(/\"/g, '\\\\\"').replace(/'/g, \"\\\\'\");\n\nexport const fetchPlugin = userInput => {\n  return {\n    name: \"fetch-plugin\",\n\n    setup(build) {\n      build.onLoad({\n        filter: /(^index\\.js$)/\n      }, () => {\n        return {\n          loader: \"jsx\",\n          contents: userInput\n        };\n      });\n      build.onLoad({\n        filter: /.css$/\n      }, async args => {\n        const cachedResult = await getCachedPath(args.path);\n\n        if (cachedResult) {\n          return cachedResult;\n        }\n\n        const {\n          data,\n          request\n        } = await axios.get(args.path);\n        const escaped = escapeCSS(data);\n        const contents = convertCSSToJSS(escaped);\n        const result = {\n          loader: \"jsx\",\n          contents,\n          resolveDir: new URL(\"./\", request.responseURL).pathname\n        };\n        await fileCache.setItem(args.path, result);\n        return result;\n      });\n      build.onLoad({\n        filter: /.*/\n      }, async args => {\n        const cachedResult = await getCachedPath(args.path);\n\n        if (cachedResult) {\n          return cachedResult;\n        }\n\n        const {\n          data,\n          request\n        } = await axios.get(args.path);\n        const fileType = args.path.match(/.css$/) ? \"css\" : \"jsx\";\n        const escaped = escapeCSS(data);\n        const contents = fileType === \"css\" ? convertCSSToJSS(escaped) : data;\n        const result = {\n          loader: \"jsx\",\n          contents,\n          resolveDir: new URL(\"./\", request.responseURL).pathname\n        };\n        await fileCache.setItem(args.path, result);\n        return result;\n      });\n    }\n\n  };\n};","map":{"version":3,"sources":["/home/joeldt/jbook/src/plugins/fetch-plugin.ts"],"names":["axios","localForage","fileCache","createInstance","name","getCachedPath","path","getItem","convertCSSToJSS","css","setESBuildConfigObj","contents","responseURL","loader","resolveDir","URL","pathname","escapeCSS","replace","fetchPlugin","userInput","setup","build","onLoad","filter","args","cachedResult","data","request","get","escaped","result","setItem","fileType","match"],"mappings":"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","sourcesContent":["import * as esbuild from \"esbuild-wasm\";\nimport axios from \"axios\";\nimport localForage from \"localforage\";\n\nconst fileCache = localForage.createInstance({\n  name: \"filecache\",\n});\n\nconst getCachedPath = (path: string) =>\n  fileCache.getItem<esbuild.OnLoadResult>(path);\n\nconst convertCSSToJSS = (css: string) => `\n  const style = document.createElement('style')\n  style.innerText = '${css}'\n  document.head.appendChild(style)\n`;\n\nconst setESBuildConfigObj = (contents: string, responseURL) => ({\n  loader: \"jsx\",\n  contents,\n  resolveDir: new URL(\"./\", responseURL).pathname,\n});\n\nconst escapeCSS = (css: string) =>\n  css.replace(/\\n/g, \"\").replace(/\"/g, '\\\\\"').replace(/'/g, \"\\\\'\");\n\nexport const fetchPlugin = (userInput: string) => {\n  return {\n    name: \"fetch-plugin\",\n    setup(build: esbuild.PluginBuild) {\n      build.onLoad({ filter: /(^index\\.js$)/ }, () => {\n        return {\n          loader: \"jsx\",\n          contents: userInput,\n        };\n      });\n\n      build.onLoad({ filter: /.css$/ }, async (args: any) => {\n        const cachedResult = await getCachedPath(args.path);\n\n        if (cachedResult) {\n          return cachedResult;\n        }\n\n        const { data, request } = await axios.get(args.path);\n\n        const escaped = escapeCSS(data);\n        const contents = convertCSSToJSS(escaped);\n\n        const result: esbuild.OnLoadResult = {\n          loader: \"jsx\",\n          contents,\n          resolveDir: new URL(\"./\", request.responseURL).pathname,\n        };\n\n        await fileCache.setItem(args.path, result);\n\n        return result;\n      });\n\n      build.onLoad({ filter: /.*/ }, async (args: any) => {\n        const cachedResult = await getCachedPath(args.path);\n\n        if (cachedResult) {\n          return cachedResult;\n        }\n\n        const { data, request } = await axios.get(args.path);\n\n        const fileType = args.path.match(/.css$/) ? \"css\" : \"jsx\";\n        const escaped = escapeCSS(data);\n        const contents = fileType === \"css\" ? convertCSSToJSS(escaped) : data;\n\n        const result: esbuild.OnLoadResult = {\n          loader: \"jsx\",\n          contents,\n          resolveDir: new URL(\"./\", request.responseURL).pathname,\n        };\n\n        await fileCache.setItem(args.path, result);\n\n        return result;\n      });\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}