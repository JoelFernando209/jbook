{"ast":null,"code":"import axios from \"axios\";\nimport localForage from \"localforage\";\nconst fileCache = localForage.createInstance({\n  name: \"filecache\"\n});\n\nconst getCachedPath = path => fileCache.getItem(path);\n\nexport const fetchPlugin = userInput => {\n  return {\n    name: \"fetch-plugin\",\n\n    setup(build) {\n      build.onLoad({\n        filter: /(^index\\.js$)/\n      }, () => {\n        return {\n          loader: \"jsx\",\n          contents: userInput\n        };\n      });\n      build.onLoad({\n        filter: /.css$/\n      }, async args => {\n        const cachedResult = await getCachedPath(args.path);\n\n        if (cachedResult) {\n          return cachedResult;\n        }\n\n        const {\n          data,\n          request\n        } = await axios.get(args.path);\n        const escaped = data.replace(/\\n/g, \"\").replace(/\"/g, '\\\\\"').replace(/'/g, \"\\\\'\");\n        const contents = `\n          const style = document.createElement('style')\n          style.innerText = '${escaped}'\n          document.head.appendChild(style)\n        `;\n        const result = {\n          loader: \"jsx\",\n          contents,\n          resolveDir: new URL(\"./\", request.responseURL).pathname\n        };\n        await fileCache.setItem(args.path, result);\n        return result;\n      });\n      build.onLoad({\n        filter: /.*/\n      }, async args => {\n        const cachedResult = await await getCachedPath(args.path);\n\n        if (cachedResult) {\n          return cachedResult;\n        }\n\n        const {\n          data,\n          request\n        } = await axios.get(args.path);\n        const fileType = args.path.match(/.css$/) ? \"css\" : \"jsx\";\n        const escaped = data.replace(/\\n/g, \"\").replace(/\"/g, '\\\\\"').replace(/'/g, \"\\\\'\");\n        const contents = fileType === \"css\" ? `\n          const style = document.createElement('style')\n          style.innerText = '${escaped}'\n          document.head.appendChild(style)\n        ` : data;\n        const result = {\n          loader: \"jsx\",\n          contents,\n          resolveDir: new URL(\"./\", request.responseURL).pathname\n        };\n        await fileCache.setItem(args.path, result);\n        return result;\n      });\n    }\n\n  };\n};","map":{"version":3,"sources":["/home/joeldt/jbook/src/plugins/fetch-plugin.ts"],"names":["axios","localForage","fileCache","createInstance","name","getCachedPath","path","getItem","fetchPlugin","userInput","setup","build","onLoad","filter","loader","contents","args","cachedResult","data","request","get","escaped","replace","result","resolveDir","URL","responseURL","pathname","setItem","fileType","match"],"mappings":"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","sourcesContent":["import * as esbuild from \"esbuild-wasm\";\nimport axios from \"axios\";\nimport localForage from \"localforage\";\n\nconst fileCache = localForage.createInstance({\n  name: \"filecache\",\n});\n\nconst getCachedPath = (path: string) =>\n  fileCache.getItem<esbuild.OnLoadResult>(path);\n\nexport const fetchPlugin = (userInput: string) => {\n  return {\n    name: \"fetch-plugin\",\n    setup(build: esbuild.PluginBuild) {\n      build.onLoad({ filter: /(^index\\.js$)/ }, () => {\n        return {\n          loader: \"jsx\",\n          contents: userInput,\n        };\n      });\n\n      build.onLoad({ filter: /.css$/ }, async (args: any) => {\n        const cachedResult = await getCachedPath(args.path);\n\n        if (cachedResult) {\n          return cachedResult;\n        }\n\n        const { data, request } = await axios.get(args.path);\n\n        const escaped = data\n          .replace(/\\n/g, \"\")\n          .replace(/\"/g, '\\\\\"')\n          .replace(/'/g, \"\\\\'\");\n        const contents = `\n          const style = document.createElement('style')\n          style.innerText = '${escaped}'\n          document.head.appendChild(style)\n        `;\n\n        const result: esbuild.OnLoadResult = {\n          loader: \"jsx\",\n          contents,\n          resolveDir: new URL(\"./\", request.responseURL).pathname,\n        };\n\n        await fileCache.setItem(args.path, result);\n\n        return result;\n      });\n\n      build.onLoad({ filter: /.*/ }, async (args: any) => {\n        const cachedResult = await await getCachedPath(args.path);\n\n        if (cachedResult) {\n          return cachedResult;\n        }\n\n        const { data, request } = await axios.get(args.path);\n\n        const fileType = args.path.match(/.css$/) ? \"css\" : \"jsx\";\n        const escaped = data\n          .replace(/\\n/g, \"\")\n          .replace(/\"/g, '\\\\\"')\n          .replace(/'/g, \"\\\\'\");\n        const contents =\n          fileType === \"css\"\n            ? `\n          const style = document.createElement('style')\n          style.innerText = '${escaped}'\n          document.head.appendChild(style)\n        `\n            : data;\n\n        const result: esbuild.OnLoadResult = {\n          loader: \"jsx\",\n          contents,\n          resolveDir: new URL(\"./\", request.responseURL).pathname,\n        };\n\n        await fileCache.setItem(args.path, result);\n\n        return result;\n      });\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}